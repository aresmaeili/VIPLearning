//
//  AremConfigurator.swift
//  VIPLearning
//
//  Created by Alireza on 11/9/1401 AP.
//  Copyright Â© 1401 AP ___ORGANIZATIONNAME___. All rights reserved.
//
//  Generated by CleanSwiftGenerator
//

import Foundation
import UIKit.UIViewController

protocol AremConfigurator {
    func configure() -> AremViewController
}

final class AremDefaultConfigurator {
    private var sceneFactory: SceneFactory
    private var service: NetworkProtocol
    init(sceneFactory: SceneFactory,service: NetworkProtocol) {
        self.sceneFactory = sceneFactory
        self.service = service
    }
}

extension AremDefaultConfigurator: AremConfigurator {
    func configure() -> AremViewController {
        let viewController = UIStoryboard(name: "Arem", bundle: nil).instantiateViewController(withIdentifier: "AremViewController") as! AremViewController
        // DI
        let service: NetworkProtocol = Network()
        let worker = AremWorker(service: service)
        
        let interactor = AremInteractor()
        let presenter = AremPresenter(viewController: viewController)
        let router = AremRouter(sceneFactory: sceneFactory, viewController: viewController)
        
        interactor.presenter = presenter
        interactor.worker = worker
        viewController.interactor = interactor
        viewController.router = router
        
        return viewController
    }
}
